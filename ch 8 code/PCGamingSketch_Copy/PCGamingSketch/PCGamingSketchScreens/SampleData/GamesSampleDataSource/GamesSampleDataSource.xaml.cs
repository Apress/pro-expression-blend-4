//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.GamesSampleDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class GamesSampleDataSource { }
#else

	public class GamesSampleDataSource : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public GamesSampleDataSource()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/PCGamingSketch.Screens;component/SampleData/GamesSampleDataSource/GamesSampleDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception )
			{ }
		}

		private ItemCollection _Collection = new ItemCollection();
		public ItemCollection Collection
		{
			get
			{
				return this._Collection;
			}
		}
	}

	public class Item : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Title = string.Empty;
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if (this._Title != value)
				{
					this._Title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		private string _Line1 = string.Empty;
		public string Line1
		{
			get
			{
				return this._Line1;
			}
			set
			{
				if (this._Line1 != value)
				{
					this._Line1 = value;
					this.OnPropertyChanged("Line1");
				}
			}
		}

		private string _Line2 = string.Empty;
		public string Line2
		{
			get
			{
				return this._Line2;
			}
			set
			{
				if (this._Line2 != value)
				{
					this._Line2 = value;
					this.OnPropertyChanged("Line2");
				}
			}
		}

		private string _Line3 = string.Empty;
		public string Line3
		{
			get
			{
				return this._Line3;
			}
			set
			{
				if (this._Line3 != value)
				{
					this._Line3 = value;
					this.OnPropertyChanged("Line3");
				}
			}
		}
	}

	public class ItemCollection : System.Collections.ObjectModel.ObservableCollection<Item>
	{ }
#endif
}
